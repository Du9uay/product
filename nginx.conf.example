# Nginx 配置文件示例
# 请根据实际情况修改域名和路径
# 在宝塔面板中: 网站 -> 设置 -> 配置文件

server {
    listen 80;
    listen [::]:80;
    server_name your-domain.com www.your-domain.com;  # 替换为您的域名

    # 如果需要 HTTPS，启用以下配置
    # listen 443 ssl http2;
    # listen [::]:443 ssl http2;
    # ssl_certificate /path/to/your/cert.pem;
    # ssl_certificate_key /path/to/your/key.pem;

    # 网站根目录 - 指向构建后的 dist 目录
    root /www/wwwroot/product/frontend/dist;
    index index.html;

    # 访问日志
    access_log /www/wwwlogs/product-manual.log;
    error_log /www/wwwlogs/product-manual.error.log;

    # 启用 gzip 压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript
               application/json application/javascript application/xml+rss
               application/rss+xml font/truetype font/opentype
               application/vnd.ms-fontobject image/svg+xml;

    # SPA 路由支持 - 所有请求都返回 index.html
    location / {
        try_files $uri $uri/ /index.html;
    }

    # 静态资源缓存策略
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # 视频文件配置
    location ~* \.(mp4|webm|ogg)$ {
        expires 30d;
        add_header Cache-Control "public";
        add_header Access-Control-Allow-Origin *;
        access_log off;
    }

    # 安全头设置
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;

    # 禁止访问隐藏文件
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # 禁止访问 node_modules 等目录
    location ~* /(node_modules|\.git|\.vscode) {
        deny all;
        access_log off;
        log_not_found off;
    }

    # favicon.ico 和 robots.txt 不记录日志
    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }

    location = /robots.txt {
        log_not_found off;
        access_log off;
    }
}

# HTTP 强制跳转 HTTPS (可选)
# server {
#     listen 80;
#     listen [::]:80;
#     server_name your-domain.com www.your-domain.com;
#     return 301 https://$server_name$request_uri;
# }
